package org.matheclipse.core.reflection.system.rules;

import static org.matheclipse.core.expression.F.*;
import org.matheclipse.core.interfaces.ISymbol;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.patternmatching.Matcher;

/**
 * <p>Generated by <code>org.matheclipse.core.preprocessor.RulePreprocessor</code>.</p>
 * <p>See GIT repository at: <a href="https://github.com/axkr/symja_android_library">github.com/axkr/symja_android_library under the tools directory</a>.</p>
 */
public interface Hypergeometric1F1Rules {
  final public static IAST RULES = List(
    // Hypergeometric1F1(a_Integer,b_,z_):=Module({n=-a},Sum(FactorialPower(-n,k,-1)/FunctionExpand(FactorialPower(b,k,-1))*z^k/k!,{k,0,n})/;a<0&&!TrueQ(bâˆˆIntegers&&b<=0&&b>a))
    ISetDelayed(Hypergeometric1F1($p(a, Integer),b_,z_),
      Module(list(Set(n,Negate(a))),Condition(Sum(Times(FactorialPower(Negate(n),k,CN1),Power(FunctionExpand(FactorialPower(b,k,CN1)),CN1),Power(z,k),Power(Factorial(k),CN1)),list(k,C0,n)),And(Less(a,C0),Not(TrueQ(And(Element(b,Integers),LessEqual(b,C0),Greater(b,a))))))))
  );
}
