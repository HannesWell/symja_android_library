package org.matheclipse.core.reflection.system.rules;

import static org.matheclipse.core.expression.F.*;
import org.matheclipse.core.interfaces.IAST;

/**
 * <p>Generated by <code>org.matheclipse.core.preprocessor.RulePreprocessor</code>.</p>
 * <p>See GIT repository at: <a href="https://github.com/axkr/symja_android_library">github.com/axkr/symja_android_library under the tools directory</a>.</p>
 */
public interface Hypergeometric2F1Rules {
  /**
   * <ul>
   * <li>index 0 - number of equal rules in <code>RULES</code></li>
	 * </ul>
	 */
  final public static int[] SIZES = { 3, 41 };

  final public static IAST RULES = List(
    IInit(Hypergeometric2F1, SIZES),
    // Hypergeometric2F1(0,b_,c_,z_)=1
    ISet(Hypergeometric2F1(C0,b_,c_,z_),
      C1),
    // Hypergeometric2F1(a_,0,c_,z_)=1
    ISet(Hypergeometric2F1(a_,C0,c_,z_),
      C1),
    // Hypergeometric2F1(a_,b_,c_,0)=1
    ISet(Hypergeometric2F1(a_,b_,c_,C0),
      C1),
    // Hypergeometric2F1(1/2,1/2,3/2,z_):=ArcSin(Sqrt(z))/Sqrt(z)
    ISetDelayed(Hypergeometric2F1(C1D2,C1D2,QQ(3L,2L),z_),
      Times(Power(z,CN1D2),ArcSin(Sqrt(z)))),
    // Hypergeometric2F1(1/2,1,-5/2,z_):=(5-7*z*(3+5*(-1+z)*z))/(5*(-1+z)^4)
    ISetDelayed(Hypergeometric2F1(C1D2,C1,QQ(-5L,2L),z_),
      Times(Power(Times(C5,Power(Plus(CN1,z),C4)),CN1),Plus(C5,Times(CN7,z,Plus(C3,Times(C5,Plus(CN1,z),z)))))),
    // Hypergeometric2F1(1/2,1,-3/2,z_):=(-3+5*(2-3*z)*z)/(3*(-1+z)^3)
    ISetDelayed(Hypergeometric2F1(C1D2,C1,QQ(-3L,2L),z_),
      Times(Power(Times(C3,Power(Plus(CN1,z),C3)),CN1),Plus(CN3,Times(C5,Plus(C2,Times(CN3,z)),z)))),
    // Hypergeometric2F1(1/2,1,-1/2,z_):=(1-3*z)/(-1+z)^2
    ISetDelayed(Hypergeometric2F1(C1D2,C1,CN1D2,z_),
      Times(Power(Plus(CN1,z),CN2),Plus(C1,Times(CN3,z)))),
    // Hypergeometric2F1(1/2,1,1/2,z_):=1/(1-z)
    ISetDelayed(Hypergeometric2F1(C1D2,C1,C1D2,z_),
      Power(Subtract(C1,z),CN1)),
    // Hypergeometric2F1(1/2,1,1,z_):=1/Sqrt(1-z)
    ISetDelayed(Hypergeometric2F1(C1D2,C1,C1,z_),
      Power(Subtract(C1,z),CN1D2)),
    // Hypergeometric2F1(1/2,1,3/2,z_):=ArcTanh(Sqrt(z))/Sqrt(z)
    ISetDelayed(Hypergeometric2F1(C1D2,C1,QQ(3L,2L),z_),
      Times(Power(z,CN1D2),ArcTanh(Sqrt(z)))),
    // Hypergeometric2F1(1/2,1,2,z_):=(2-2*Sqrt(1-z))/z
    ISetDelayed(Hypergeometric2F1(C1D2,C1,C2,z_),
      Times(Plus(C2,Times(CN2,Sqrt(Subtract(C1,z)))),Power(z,CN1))),
    // Hypergeometric2F1(1/2,1,5/2,z_):=(3*(Sqrt(z)+(-1+z)*ArcTanh(Sqrt(z))))/(2*z^(3/2))
    ISetDelayed(Hypergeometric2F1(C1D2,C1,QQ(5L,2L),z_),
      Times(C3,Power(Times(C2,Power(z,QQ(3L,2L))),CN1),Plus(Sqrt(z),Times(Plus(CN1,z),ArcTanh(Sqrt(z)))))),
    // Hypergeometric2F1(1/2,1,3,z_):=((-1)*4*(2-2*Sqrt(1-z)+(-3+2*Sqrt(1-z))*z))/(3*z^2)
    ISetDelayed(Hypergeometric2F1(C1D2,C1,C3,z_),
      Times(CN1,C4,Plus(C2,Times(CN2,Sqrt(Subtract(C1,z))),Times(Plus(CN3,Times(C2,Sqrt(Subtract(C1,z)))),z)),Power(Times(C3,Sqr(z)),CN1))),
    // Hypergeometric2F1(1/2,1,4,z_):=(2*(-8*(1-z)^(5/2)-20*z+15*z^2+8))/(5*z^3)
    ISetDelayed(Hypergeometric2F1(C1D2,C1,C4,z_),
      Times(C2,Plus(Times(CN8,Power(Subtract(C1,z),QQ(5L,2L))),Times(ZZ(-20L),z),Times(ZZ(15L),Sqr(z)),C8),Power(Times(C5,Power(z,C3)),CN1))),
    // Hypergeometric2F1(1/2,1,5,z_):=-8*(-16*(-1+Sqrt(1-z))+z*(8*(-7+6*Sqrt(1-z))+z*(70-48*Sqrt(1-z)+(-35+16*Sqrt(1-z))*z)))/(35*z^4)
    ISetDelayed(Hypergeometric2F1(C1D2,C1,C5,z_),
      Times(CN1,C8,Plus(Times(ZZ(-16L),Plus(CN1,Sqrt(Subtract(C1,z)))),Times(z,Plus(Times(C8,Plus(CN7,Times(C6,Sqrt(Subtract(C1,z))))),Times(z,Plus(ZZ(70L),Times(ZZ(-48L),Sqrt(Subtract(C1,z))),Times(Plus(ZZ(-35L),Times(ZZ(16L),Sqrt(Subtract(C1,z)))),z)))))),Power(Times(ZZ(35L),Power(z,C4)),CN1))),
    // Hypergeometric2F1(1/2,2,-11/2,z_):=(231+z*(-1890+13*z*(525+11*z*(-100+3*z*(45+7*z*(-6+5*z))))))/(231*(-1+z)^8)
    ISetDelayed(Hypergeometric2F1(C1D2,C2,QQ(-11L,2L),z_),
      Times(Power(Times(ZZ(231L),Power(Plus(CN1,z),C8)),CN1),Plus(ZZ(231L),Times(z,Plus(ZZ(-1890L),Times(ZZ(13L),z,Plus(ZZ(525L),Times(ZZ(11L),z,Plus(ZZ(-100L),Times(C3,z,Plus(ZZ(45L),Times(C7,z,Plus(CN6,Times(C5,z)))))))))))))),
    // Hypergeometric2F1(1/2,2,-9/2,z_):=(-63+13*z*(35+11*z*(-10+3*z*(6+7*(-1+z)*z))))/(63*(-1+z)^7)
    ISetDelayed(Hypergeometric2F1(C1D2,C2,QQ(-9L,2L),z_),
      Times(Power(Times(ZZ(63L),Power(Plus(CN1,z),C7)),CN1),Plus(ZZ(-63L),Times(ZZ(13L),z,Plus(ZZ(35L),Times(ZZ(11L),z,Plus(CN10,Times(C3,z,Plus(C6,Times(C7,Plus(CN1,z),z)))))))))),
    // Hypergeometric2F1(1/2,2,-7/2,z_):=(35+11*z*(-20+3*z*(18+7*z*(-4+5*z))))/(35*(-1+z)^6)
    ISetDelayed(Hypergeometric2F1(C1D2,C2,QQ(-7L,2L),z_),
      Times(Power(Times(ZZ(35L),Power(Plus(CN1,z),C6)),CN1),Plus(ZZ(35L),Times(ZZ(11L),z,Plus(ZZ(-20L),Times(C3,z,Plus(ZZ(18L),Times(C7,z,Plus(CN4,Times(C5,z)))))))))),
    // Hypergeometric2F1(1/2,2,-5/2,z_):=(-5+3*z*(9+7*z*(-3+5*z)))/(5*(-1+z)^5)
    ISetDelayed(Hypergeometric2F1(C1D2,C2,QQ(-5L,2L),z_),
      Times(Power(Times(C5,Power(Plus(CN1,z),C5)),CN1),Plus(CN5,Times(C3,z,Plus(C9,Times(C7,z,Plus(CN3,Times(C5,z)))))))),
    // Hypergeometric2F1(1/2,2,-3/2,z_):=(3+7*z*(-2+5*z))/(3*(-1+z)^4)
    ISetDelayed(Hypergeometric2F1(C1D2,C2,QQ(-3L,2L),z_),
      Times(Power(Times(C3,Power(Plus(CN1,z),C4)),CN1),Plus(C3,Times(C7,z,Plus(CN2,Times(C5,z)))))),
    // Hypergeometric2F1(1/2,2,-1/2,z_):=(-1+5*z)/(-1+z)^3
    ISetDelayed(Hypergeometric2F1(C1D2,C2,CN1D2,z_),
      Times(Power(Plus(CN1,z),CN3),Plus(CN1,Times(C5,z)))),
    // Hypergeometric2F1(1/2,2,1/2,z_):=1/(-1+z)^2
    ISetDelayed(Hypergeometric2F1(C1D2,C2,C1D2,z_),
      Power(Plus(CN1,z),CN2)),
    // Hypergeometric2F1(1/2,2,1,z_):=(2-z)/(2*(1-z)^(3/2))
    ISetDelayed(Hypergeometric2F1(C1D2,C2,C1,z_),
      Times(Power(Times(C2,Power(Subtract(C1,z),QQ(3L,2L))),CN1),Subtract(C2,z))),
    // Hypergeometric2F1(1/2,2,3/2,z_):=1/2*(1/(1-z)+ArcTanh(Sqrt(z))/Sqrt(z))
    ISetDelayed(Hypergeometric2F1(C1D2,C2,QQ(3L,2L),z_),
      Times(C1D2,Plus(Power(Subtract(C1,z),CN1),Times(Power(z,CN1D2),ArcTanh(Sqrt(z)))))),
    // Hypergeometric2F1(1/2,2,2,z_):=1/Sqrt(1-z)
    ISetDelayed(Hypergeometric2F1(C1D2,C2,C2,z_),
      Power(Subtract(C1,z),CN1D2)),
    // Hypergeometric2F1(1/2,2,5/2,z_):=-3/(4*z)+(3*(1+z)*ArcTanh(Sqrt(z)))/(4*z^(3/2))
    ISetDelayed(Hypergeometric2F1(C1D2,C2,QQ(5L,2L),z_),
      Plus(Times(CN1,C3,Power(Times(C4,z),CN1)),Times(C3,Plus(C1,z),Power(Times(C4,Power(z,QQ(3L,2L))),CN1),ArcTanh(Sqrt(z))))),
    // Hypergeometric2F1(1/2,2,3,z_):=(4*(2-Sqrt(1-z)*(2+z)))/(3*z^2)
    ISetDelayed(Hypergeometric2F1(C1D2,C2,C3,z_),
      Times(C4,Plus(C2,Times(CN1,Sqrt(Subtract(C1,z)),Plus(C2,z))),Power(Times(C3,Sqr(z)),CN1))),
    // Hypergeometric2F1(1/2,2,7/2,z_):=(15*(-(-3+z)*Sqrt(z)+(-3+2*z+z^2)*ArcTanh(Sqrt(z))))/(16*z^(5/2))
    ISetDelayed(Hypergeometric2F1(C1D2,C2,QQ(7L,2L),z_),
      Times(ZZ(15L),Power(Times(ZZ(16L),Power(z,QQ(5L,2L))),CN1),Plus(Times(CN1,Plus(CN3,z),Sqrt(z)),Times(Plus(CN3,Times(C2,z),Sqr(z)),ArcTanh(Sqrt(z)))))),
    // Hypergeometric2F1(1/2,2,4,z_):=(8*(-4+4*Sqrt(1-z)+(5-3*Sqrt(1-z))*z-Sqrt(1-z)*z^2))/(5*z^3)
    ISetDelayed(Hypergeometric2F1(C1D2,C2,C4,z_),
      Times(C8,Plus(CN4,Times(C4,Sqrt(Subtract(C1,z))),Times(Plus(C5,Times(CN3,Sqrt(Subtract(C1,z)))),z),Times(CN1,Sqrt(Subtract(C1,z)),Sqr(z))),Power(Times(C5,Power(z,C3)),CN1))),
    // Hypergeometric2F1(1/2,2,9/2,z_):=(35*(Sqrt(z)*(15+z*(22+3*z))+3*(-5+z)*(1+z)^2*ArcTan(Sqrt(z))))/(96*z^(7/2))
    ISetDelayed(Hypergeometric2F1(C1D2,C2,QQ(9L,2L),z_),
      Times(ZZ(35L),Power(Times(ZZ(96L),Power(z,QQ(7L,2L))),CN1),Plus(Times(Sqrt(z),Plus(ZZ(15L),Times(z,Plus(ZZ(22L),Times(C3,z))))),Times(C3,Plus(CN5,z),Sqr(Plus(C1,z)),ArcTan(Sqrt(z)))))),
    // Hypergeometric2F1(1/2,2,5,z_):=((-1)*16*(24*(-1+Sqrt(1-z))+z*(56-44*Sqrt(1-z)+z*(-35+16*Sqrt(1-z)+4*Sqrt(1-z)*z))))/(35*z^4)
    ISetDelayed(Hypergeometric2F1(C1D2,C2,C5,z_),
      Times(CN1,ZZ(16L),Plus(Times(ZZ(24L),Plus(CN1,Sqrt(Subtract(C1,z)))),Times(z,Plus(ZZ(56L),Times(ZZ(-44L),Sqrt(Subtract(C1,z))),Times(z,Plus(ZZ(-35L),Times(ZZ(16L),Sqrt(Subtract(C1,z))),Times(C4,Sqrt(Subtract(C1,z)),z)))))),Power(Times(ZZ(35L),Power(z,C4)),CN1))),
    // Hypergeometric2F1(1/2,2,11/2,z_):=(21*(Sqrt(z)*(105+z*(-265+(191-15*z)*z))+15*(-1+z)^3*(7+z)*ArcTanh(Sqrt(z))))/(256*z^(9/2))
    ISetDelayed(Hypergeometric2F1(C1D2,C2,QQ(11L,2L),z_),
      Times(ZZ(21L),Power(Times(ZZ(256L),Power(z,QQ(9L,2L))),CN1),Plus(Times(Sqrt(z),Plus(ZZ(105L),Times(z,Plus(ZZ(-265L),Times(Plus(ZZ(191L),Times(ZZ(-15L),z)),z))))),Times(ZZ(15L),Power(Plus(CN1,z),C3),Plus(C7,z),ArcTanh(Sqrt(z)))))),
    // Hypergeometric2F1(1,3/2,-5/2,z_):=(-5+7*z*(4+5*z(-2+z*(4+z))))/(5*(-1+z)^5)
    ISetDelayed(Hypergeometric2F1(C1,QQ(3L,2L),QQ(-5L,2L),z_),
      Times(Power(Times(C5,Power(Plus(CN1,z),C5)),CN1),Plus(CN5,Times(C7,z,Plus(C4,Times(C5,$(z,Plus(CN2,Times(z,Plus(C4,z)))))))))),
    // Hypergeometric2F1(1,3/2,-3/2,z_):=(1+5*z(-1+z*(3+z)))/(-1+z)^4
    ISetDelayed(Hypergeometric2F1(C1,QQ(3L,2L),QQ(-3L,2L),z_),
      Times(Power(Plus(CN1,z),CN4),Plus(C1,Times(C5,$(z,Plus(CN1,Times(z,Plus(C3,z)))))))),
    // Hypergeometric2F1(1,3/2,-1/2,z_):=(-1+6*z+3*z^2)/(-1+z)^3
    ISetDelayed(Hypergeometric2F1(C1,QQ(3L,2L),CN1D2,z_),
      Times(Power(Plus(CN1,z),CN3),Plus(CN1,Times(C6,z),Times(C3,Sqr(z))))),
    // Hypergeometric2F1(1,3/2,1/2,z_):=(1+z)/(-1+z)^2
    ISetDelayed(Hypergeometric2F1(C1,QQ(3L,2L),C1D2,z_),
      Times(Power(Plus(CN1,z),CN2),Plus(C1,z))),
    // Hypergeometric2F1(1,3/2,1,z_):=1/(1-z)^(3/2)
    ISetDelayed(Hypergeometric2F1(C1,QQ(3L,2L),C1,z_),
      Power(Subtract(C1,z),QQ(-3L,2L))),
    // Hypergeometric2F1(1,3/2,3/2,z_):=(2*(1-Sqrt(1-z)))/(z*Sqrt(1-z))
    ISetDelayed(Hypergeometric2F1(C1,QQ(3L,2L),QQ(3L,2L),z_),
      Times(C2,Power(Times(z,Sqrt(Subtract(C1,z))),CN1),Subtract(C1,Sqrt(Subtract(C1,z))))),
    // Hypergeometric2F1(1,3/2,2,z_):=1/(1-z)^(3/2)
    ISetDelayed(Hypergeometric2F1(C1,QQ(3L,2L),C2,z_),
      Power(Subtract(C1,z),QQ(-3L,2L))),
    // Hypergeometric2F1(1,3/2,5/2,z_):=-3/z+(3*ArcTanh(Sqrt(z)))/z^(3/2)
    ISetDelayed(Hypergeometric2F1(C1,QQ(3L,2L),QQ(5L,2L),z_),
      Plus(Times(CN1,C3,Power(z,CN1)),Times(C3,Power(z,QQ(-3L,2L)),ArcTanh(Sqrt(z))))),
    // Hypergeometric2F1(1,1,2,z_):=-Log(1-z)/z
    ISetDelayed(Hypergeometric2F1(C1,C1,C2,z_),
      Times(CN1,Power(z,CN1),Log(Subtract(C1,z)))),
    // Hypergeometric2F1(1,b_,2,z_):=-(-1+(1-z)^b+z)/((1-z)^b*(-1+b)*z)
    ISetDelayed(Hypergeometric2F1(C1,b_,C2,z_),
      Times(CN1,Plus(CN1,Power(Subtract(C1,z),b),z),Power(Times(Power(Subtract(C1,z),b),Plus(CN1,b),z),CN1))),
    // Hypergeometric2F1(1,2,3/2,z_):=(Sqrt(z)*Sqrt(1-z)+ArcSin(Sqrt(z)))/(2*(1-z)^(3/2)*Sqrt(z))
    ISetDelayed(Hypergeometric2F1(C1,C2,QQ(3L,2L),z_),
      Times(Power(Times(C2,Power(Subtract(C1,z),QQ(3L,2L)),Sqrt(z)),CN1),Plus(Times(Sqrt(z),Sqrt(Subtract(C1,z))),ArcSin(Sqrt(z))))),
    // Hypergeometric2F1(3/2,2,5/2,a_.*z_^n_.):=((-1)*3*(Sqrt(a)*z^(n/2)-ArcTanh(Sqrt(a)*z^(n/2))+a*z^n*ArcTanh(Sqrt(a)*z^(n/2))))/(z^(1/2*3*n)*2*a^(3/2)*(-1+a*z^n))
    ISetDelayed(Hypergeometric2F1(QQ(3L,2L),C2,QQ(5L,2L),Times(a_DEFAULT,Power(z_,n_DEFAULT))),
      Times(CN1,C3,Power(Times(Power(z,Times(C1D2,C3,n)),C2,Power(a,QQ(3L,2L)),Plus(CN1,Times(a,Power(z,n)))),CN1),Plus(Times(Sqrt(a),Power(z,Times(C1D2,n))),Negate(ArcTanh(Times(Sqrt(a),Power(z,Times(C1D2,n))))),Times(a,Power(z,n),ArcTanh(Times(Sqrt(a),Power(z,Times(C1D2,n)))))))),
    // Hypergeometric2F1(m_Integer,n_Integer,2,1):=CatalanNumber(-n)/;n<0&&m==n+1
    ISetDelayed(Hypergeometric2F1($p(m, Integer),$p(n, Integer),C2,C1),
      Condition(CatalanNumber(Negate(n)),And(Less(n,C0),Equal(m,Plus(n,C1))))),
    // Hypergeometric2F1(a_,b_,c_,z_):=(-1/(-1+b)+b/(-1+b)+z/(-1+b)+z*a/(-1+b)-b/(-1+b)*z)/(1-z)^(1+a)/;NumberQ(b)&&NumberQ(c)&&!(IntegerQ(c)&&c<0)&&PossibleZeroQ(-1+b-c)
    ISetDelayed(Hypergeometric2F1(a_,b_,c_,z_),
      Condition(Times(Power(Subtract(C1,z),Subtract(CN1,a)),Plus(Negate(Power(Plus(CN1,b),CN1)),Times(Power(Plus(CN1,b),CN1),b),Times(Power(Plus(CN1,b),CN1),z),Times(z,a,Power(Plus(CN1,b),CN1)),Times(CN1,Power(Plus(CN1,b),CN1),b,z))),And(And(NumberQ(b),NumberQ(c)),Not(And(IntegerQ(c),Less(c,C0))),PossibleZeroQ(Plus(CN1,b,Negate(c)))))),
    // Hypergeometric2F1(b_,a_,c_,z_):=(-1/(-1+b)+b/(-1+b)+z/(-1+b)+z*a/(-1+b)-b/(-1+b)*z)/(1-z)^(1+a)/;NumberQ(b)&&NumberQ(c)&&!(IntegerQ(c)&&c<0)&&PossibleZeroQ(-1+b-c)
    ISetDelayed(Hypergeometric2F1(b_,a_,c_,z_),
      Condition(Times(Power(Subtract(C1,z),Subtract(CN1,a)),Plus(Negate(Power(Plus(CN1,b),CN1)),Times(Power(Plus(CN1,b),CN1),b),Times(Power(Plus(CN1,b),CN1),z),Times(z,a,Power(Plus(CN1,b),CN1)),Times(CN1,Power(Plus(CN1,b),CN1),b,z))),And(And(NumberQ(b),NumberQ(c)),Not(And(IntegerQ(c),Less(c,C0))),PossibleZeroQ(Plus(CN1,b,Negate(c))))))
  );
}
