package org.matheclipse.core.reflection.system.rules;

import static org.matheclipse.core.expression.F.*;
import org.matheclipse.core.interfaces.IAST;

/**
 * <p>Generated by <code>org.matheclipse.core.preprocessor.RulePreprocessor</code>.</p>
 * <p>See GIT repository at: <a href="https://github.com/axkr/symja_android_library">github.com/axkr/symja_android_library under the tools directory</a>.</p>
 */
public class ToIntervalDataRules {
  /**
   * <ul>
   * <li>index 0 - number of equal rules in <code>RULES</code></li>
	 * </ul>
	 */
  final public static int[] SIZES = { 1, 6 };

  final public static IAST RULES = List(
    IInit(ToIntervalData, SIZES),
    // ToIntervalData(HoldPattern(Inequality(a_,(s:Less|LessEqual),x_,(t:Less|LessEqual),b_)),x_):=IntervalData({a,s,t,b})
    ISetDelayed(ToIntervalData(HoldPattern(And($(s_,a_,x_),$(t_,x_,b_))),x_),
      IntervalData(List(a,s,t,b))),
    // ToIntervalData(x_>a_,x_):=IntervalData({a,Less,Less,Infinity})
    ISetDelayed(ToIntervalData(Greater(x_,a_),x_),
      IntervalData(List(a,Less,Less,oo))),
    // ToIntervalData(x_>=a_,x_):=IntervalData({a,LessEqual,Less,Infinity})
    ISetDelayed(ToIntervalData(GreaterEqual(x_,a_),x_),
      IntervalData(List(a,LessEqual,Less,oo))),
    // ToIntervalData(x_<b_,x_):=IntervalData({-Infinity,Less,Less,b})
    ISetDelayed(ToIntervalData(Less(x_,b_),x_),
      IntervalData(List(Negate(oo),Less,Less,b))),
    // ToIntervalData(x_<=b_,x_):=IntervalData({-Infinity,Less,LessEqual,b})
    ISetDelayed(ToIntervalData(LessEqual(x_,b_),x_),
      IntervalData(List(Negate(oo),Less,LessEqual,b))),
    // ToIntervalData(b_>x_,x_):=IntervalData({-Infinity,Less,Less,b})
    ISetDelayed(ToIntervalData(Greater(b_,x_),x_),
      IntervalData(List(Negate(oo),Less,Less,b))),
    // ToIntervalData(b_>=x_,x_):=IntervalData({-Infinity,Less,LessEqual,b})
    ISetDelayed(ToIntervalData(GreaterEqual(b_,x_),x_),
      IntervalData(List(Negate(oo),Less,LessEqual,b))),
    // ToIntervalData(Reals)=IntervalData({-Infinity,Less,Less,Infinity})
    ISet(ToIntervalData(Reals),
      IntervalData(List(Noo,Less,Less,oo)), true)
  );
}
