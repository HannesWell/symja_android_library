package org.matheclipse.io.system;

import org.junit.Test;
import org.matheclipse.core.basic.Config;

public class FactorIntegerTest extends AbstractTestCase {

  @Test
  public void testFactorInteger() {
    // examples from https://github.com/aarpyy/SIQS
    check("FactorInteger(3504362624355414643118009544796482802141562697959987)", //
        "{{785419973550680254573,1},{4461769171101033943441783314719,1}}");
    check("FactorInteger(584881463640636654453654454375396394857489)", //
        "{{744673529241354861493,1},{785419973550680254573,1}}");

    check("FactorInteger(-9223372036854775808/9223372036854775807)", //
        "{{-1,1},{2,63},{7,-2},{73,-1},{127,-1},{337,-1},{92737,-1},{649657,-1}}");
    check("4711\\\n" + //
        "0815", //
        "47110815");
    check("4711\\\n" + //
        "  0815", //
        "Syntax error in line: 2 - error in number - unknown character after back-slash.\n" + //
            "  0815\n" + //
            "^");
    check("FactorInteger(21) // N", //
        "{{3.0,1.0},{7.0,1.0}}");
    check("FactorInteger(10, GaussianIntegers->True)", //
        "{{-1,1},{1+I,2},{1+I*2,1},{2+I,1}}");
    check("Power @@@ FactorInteger(10, GaussianIntegers->True)", //
        "{-1,I*2,1+I*2,2+I}");
    check("Times @@ (Power @@@ FactorInteger(10, GaussianIntegers->True))", //
        "10");
    // 113 seconds (vs. 147 seconds in the old version) on notebook
    // check("FactorInteger(10^79+5923)", "");
    // 18 seconds (vs. 32 seconds in the old version)
    // check("FactorInteger(10^71-1)", "");
    if (Config.EXPENSIVE_JUNIT_TESTS) {
      System.out.println();
      check("FactorInteger(856483652537814883803418179972154563054077)", //
          "{{42665052615296697659,1},{20074595014814065252903,1}}");
      System.out.print('.');
      check("FactorInteger(1593332576170570774181606244493046197050984933692181475920784855223341)", //
          "{{17,1},{1210508704285703,1},{2568160569265616473,1},{\n"
              + "30148619026320753545829271787156467,1}}");
      System.out.print('.');
      check(
          "FactorInteger(101546450935661953908994991437690198927080333663460351836152986526126114727314353555755712261904130976988029406423152881932996637460315302992884162068350429 )", //
          "{{123456789012419,1},{123456789012421,1},{123456789012437,1},{123456789012439,1},{\n"
              + "123456789012463,1},{123456789012521,1},{123456789012523,1},{123456789012533,1},{\n"
              + "123456789012577,1},{123456789012629,1},{123456789012637,1}}");
      System.out.print('.');
      check(
          "FactorInteger(8225267468394993133669189614204532935183709603155231863020477010700542265332938919716662623)", //
          "{{1234567891,1},{1234567907,1},{1234567913,1},{1234567927,1},{1234567949,1},{\n"
              + "1234567967,1},{1234567981,1},{1234568021,1},{1234568029,1},{1234568047,1}}");
      System.out.print('.');
      // 3225275494496681 (52 bits) = 56791489 * 56791529
      check("FactorInteger(3225275494496681)", //
          "{{56791489,1},{56791529,1}}");
      System.out.print('.');
      // 322527333642009919 (59 bits) = 567914891 * 567914909
      check("FactorInteger(322527333642009919)", //
          "{{567914891,1},{567914909,1}}");
      System.out.print('.');
      // 3225273260887418687 (62 bits) = 567914891 * 5679148957
      check("FactorInteger(3225273260887418687)", //
          "{{567914891,1},{5679148957,1}}");
      System.out.print('.');
      // very slow test
      check(
          "FactorInteger(1794577685365897117833870712928656282041295031283603412289229185967719140138841093599)", //
          "{{42181796536350966453737572957846241893933,1},{\n"
              + "42543889372264778301966140913837516662044603,1}}");
      System.out.print('.');
      // 10^79+5923 - very slow test
      check("FactorInteger(10^79+5923)", //
          "{{1333322076518899001350381760807974795003,1},{\n"
              + "7500063320115780212377802894180923803641,1}}");
      System.out.print('.');
      check(
          "1333322076518899001350381760807974795003*7500063320115780212377802894180923803641==10^79+5923", //
          "True");
      System.out.print('.');
      check("FactorInteger(10^71-1)", //
          "{{3,2},{241573142393627673576957439049,1},{\n"
              + "45994811347886846310221728895223034301839,1}}");
      System.out.print('.');
      check("3^2*241573142393627673576957439049*45994811347886846310221728895223034301839==10^71-1", //
          "True");
      System.out.println();
      System.out.print('.');
      check("FactorInteger(10^59+213)", //
          "{{213916881789829278910570173437,1},{467471286806848547076331371449,1}}");
      System.out.print('.');
      check("213916881789829278910570173437*467471286806848547076331371449== 10^59+213", //
          "True");
      System.out.print('.');
      check(
          "FactorInteger(966983290915691193309978723256242679920691599725908954700676674631843021151)", //
          "{{2166660942804222727904664493239497749,1},{\n"
              + "446301159453293757389122758418041256099,1}}");
      System.out.print('.');
      check("FactorInteger(672924717570659549138949381690007452648932205241)", //
          "{{324557421200651278898953,1},{2073361056053736024795697,1}}");
      System.out.print('.');
      check("FactorInteger(475055344870856723877355576259313975012575765717)", //
          "{{387850060601719154011751,1},{1224842775926979010778467,1}}");
      System.out.print('.');
      check("FactorInteger(8438503049348381100385800049534923490020044110031)", //
          "{{59,1},{41387,1},{40320271,1},{85708917607365601059185614891297817,1}}");
      System.out.print('.');
      check("FactorInteger(10^100+1)", //
          "{{73,1},{137,1},{401,1},{1201,1},{1601,1},{1676321,1},{5964848081,1},{\n"
              + "129694419029057750551385771184564274499075700947656757821537291527196801,1}}");
      System.out.print('.');
      check("FactorInteger(308119573764812073923)", //
          "{{19,2},{367,1},{132491,1},{17553335119,1}}");
      System.out.print('.');
      check("19^2*367*132491*17553335119", //
          "308119573764812073923");
      System.out.print('.');
      check("FactorInteger(132296607982211351148)", //
          "{{2,2},{3,4},{331,1},{107251,1},{11502026267,1}}");
      System.out.println();
      System.out.print('.');
      check("2^2*3^4*331*107251*11502026267", //
          "132296607982211351148");
      System.out.print('.');
      check("FactorInteger(44343535354351600000003434353)", //
          "{{149,1},{329569479697,1},{903019357561501,1}}");
      System.out.println();
      System.out.println("End of FactorInteger  EXPENSIVE_JUNIT_TESTS");

      check("FactorInteger(341550071728321)", //
          "{{10670053,1},{32010157,1}}");
      check("FactorInteger(20568266680457)", //
          "{{19,1},{101,5},{103,1}}");
      check("FactorInteger(1524157877488187891)", //
          "{{9091,1},{167655689966801,1}}");

      // Java "long" numbers
      check("FactorInteger(621887327)", //
          "{{853,1},{729059,1}}");
      check("FactorInteger(676762483)", //
          "{{877,1},{771679,1}}");

      check("FactorInteger(2947524803)", //
          "{{1433,1},{2056891,1}}");
      check("FactorInteger(5616540799)", //
          "{{1777,1},{3160687,1}}");
      check("FactorInteger(35936505149)", //
          "{{3299,1},{10893151,1}}");
      check("FactorInteger(145682871839)", //
          "{{5261,1},{27691099,1}}");
      check("FactorInteger(317756737253)", //
          "{{6823,1},{46571411,1}}");
      check("FactorInteger(3294635112749)", //
          "{{14879,1},{221428531,1}}");
      check("FactorInteger(13293477682249)", //
          "{{398077,1},{33394237,1}}");

      check("FactorInteger(24596491225651)", //
          "{{3311299,1},{7428049,1}}");
      check("FactorInteger(44579405690563)", //
          "{{930889,1},{47889067,1}}");
      check("FactorInteger(72795445155721)", //
          "{{83459,1},{872230019,1}}");
      check("FactorInteger(155209074377713)", //
          "{{361909,1},{428862157,1}}");
      check("FactorInteger(293851765137859)", //
          "{{11736397,1},{25037647,1}}");
      // 67915439339311L == 2061599 * 32943089
      check("FactorInteger(67915439339311)", //
          "{{2061599,1},{32943089,1}}");

      // 5640012124823L,
      check("FactorInteger(5640012124823)", //
          "{{23117,1},{243976819,1}}");
      // 7336014366011L,
      check("FactorInteger(7336014366011)", //
          "{{24781,1},{296033831,1}}");
      // 19699548984827L,
      check("FactorInteger(19699548984827)", //
          "{{1464751,1},{13449077,1}}");
      // 52199161732031L,
      check("FactorInteger(52199161732031)", //
          "{{2065879,1},{25267289,1}}");
      // 73891306919159L,
      check("FactorInteger(73891306919159)", //
          "{{767827,1},{96234317,1}}");
      // 112454098638991L,
      check("FactorInteger(112454098638991)", //
          "{{80309,1},{1400267699,1}}");

      // 32427229648727L,
      check("FactorInteger(32427229648727)", //
          "{{1833401,1},{17686927,1}}");
      // 87008511088033L,
      check("FactorInteger(87008511088033)", //
          "{{125299,1},{694407067,1}}");
      // 92295512906873L,
      check("FactorInteger(92295512906873)", //
          "{{170123,1},{542522251,1}}");
      // 338719143795073L,
      check("FactorInteger(112454098638991)", //
          "{{80309,1},{1400267699,1}}");
      // 346425669865991L,
      check("FactorInteger(346425669865991)", //
          "{{70163,1},{4937440957,1}}");
      // 1058244082458461L,
      check("FactorInteger(1058244082458461)", //
          "{{65677,1},{16112856593,1}}");
      // 1773019201473077L,
      check("FactorInteger(1773019201473077)", //
          "{{6539893,1},{271108289,1}}");
      // 6150742154616377L,
      check("FactorInteger(6150742154616377)", //
          "{{181039,1},{33974680343,1}}");

      // 44843649362329L,
      check("FactorInteger(44843649362329)", //
          "{{673879,1},{66545551,1}}");
      // 67954151927287L,
      check("FactorInteger(67954151927287)", //
          "{{4919639,1},{13812833,1}}");
      // 134170056884573L,
      check("FactorInteger(134170056884573)", //
          "{{446333,1},{300605281,1}}");
      // 198589283218993L,
      check("FactorInteger(198589283218993)", //
          "{{1151581,1},{172449253,1}}");
      // 737091621253457L,
      check("FactorInteger(737091621253457)", //
          "{{1772291,1},{415897627,1}}");
      // 1112268234497993L,
      check("FactorInteger(1112268234497993)", //
          "{{68053,1},{16344146981,1}}");
      // 2986396307326613L,
      check("FactorInteger(2986396307326613)", //
          "{{27054757,1},{110383409,1}}");

      // 26275638086419L,
      check("FactorInteger(26275638086419)", //
          "{{92893,1},{282859183,1}}");
      // 62246008190941L,
      check("FactorInteger(62246008190941)", //
          "{{2874499,1},{21654559,1}}");
      // 209195243701823L,
      check("FactorInteger(209195243701823)", //
          "{{248231,1},{842744233,1}}");
      // 290236682491211L,
      check("FactorInteger(290236682491211)", //
          "{{12819941,1},{22639471,1}}");
      // 485069046631849L,
      check("FactorInteger(485069046631849)", //
          "{{287537,1},{1686979577,1}}");
      // 1239671094365611L,
      check("FactorInteger(1239671094365611)", //
          "{{5148659,1},{240775529,1}}");
      // 2815471543494793L,
      check("FactorInteger(2815471543494793)", //
          "{{3865469,1},{728364797,1}}");
      // 5682546780292609L,
      check("FactorInteger(5682546780292609)", //
          "{{52196827,1},{108867667,1}}");

      // SIQS numbers
      check("factors=FactorInteger(11111111111111111111111111)", //
          "{{11,1},{53,1},{79,1},{859,1},{265371653,1},{1058313049,1}}");
      check("factors=FactorInteger(5679148659138759837165981543)", //
          "{{3,3},{466932157,1},{450469808245315337,1}}");
      check("factors=FactorInteger(11111111111111111111111111155555555555111111111111111)", //
          "{{67,1},{157,1},{1056289676880987842105819104055096069503860738769,1}}");

      check(
          "factors=FactorInteger(2900608971182010301486951469292513060638582965350239259380273225053930627446289431038392125)", //
          "{{3,11},{5,3},{7,6},{11,2},{13,2},{17,2},{19,1},{37,1},{41,1},{53,1},{59,1},{61,\n"
              + "1},{73,1},{113,1},{151,1},{227,2},{271,1},{337,1},{433,1},{457,1},{547,1},{953,1},{\n"
              + "11113,1},{11117,1},{11119,1},{33343,1},{33347,1},{33349,1},{33353,1},{33359,1}}");
      check("Times @@ Power @@@ factors", //
          "2900608971182010301486951469292513060638582965350239259380273225053930627446289\\\n" //
              + "431038392125");

      check("FactorInteger(5679148659138759837165981543 )", //
          "{{3,3},{466932157,1},{450469808245315337,1}}");
      check("FactorInteger(2^128 + 1 )", //
          "{{59649589127497217,1},{5704689200685129054721,1}}");
      check("FactorInteger(600851475143)", //
          "{{71,1},{839,1},{1471,1},{6857,1}}");
    }
    check("FactorInteger(2^32-1)", //
        "{{3,1},{5,1},{17,1},{257,1},{65537,1}}");
    check("FactorInteger(0)", //
        "{{0,1}}");
    check("FactorInteger(1)", //
        "{{1,1}}");
    check("FactorInteger(990)", //
        "{{2,1},{3,2},{5,1},{11,1}}");
    check("FactorInteger(-993)", //
        "{{-1,1},{3,1},{331,1}}");
    check("FactorInteger(2^32-1)", //
        "{{3,1},{5,1},{17,1},{257,1},{65537,1}}");

    check("FactorInteger(10+30*I,GaussianIntegers->True)", //
        "{{-1,1},{1+I,3},{1+I*2,1},{2+I,2}}");
    check("FactorInteger(11+14*I,GaussianIntegers->True)", //
        "{{11+I*14,1}}");
    check("FactorInteger(8+21*I,GaussianIntegers->True)", //
        "{{1+I*2,1},{10+I,1}}");

    check("FactorInteger(16,GaussianIntegers->True)", //
        "{{1+I,8}}");
    check("FactorInteger(8+21*I,GaussianIntegers->True)", //
        "{{1+I*2,1},{10+I,1}}");
    check("FactorInteger(361 - 1767*I ,GaussianIntegers->True)", //
        "{{-1,1},{1+I,1},{2+I,1},{4+I,1},{7+I*2,1},{19,1}}");
    check("FactorInteger(440-55*I,GaussianIntegers->True)", //
        "{{-1,1},{1+I*2,1},{2+I,2},{2+I*3,1},{11,1}}");
    check("FactorInteger(5,GaussianIntegers->True)", //
        "{{-I,1},{1+I*2,1},{2+I,1}}");
    check("FactorInteger(12,GaussianIntegers->True)", //
        "{{-1,1},{1+I,4},{3,1}}");
    check("FactorInteger(5+7*I,GaussianIntegers->True)", //
        "{{1+I,1},{6+I,1}}");

    check("factors = FactorInteger(2010)", //
        "{{2,1},{3,1},{5,1},{67,1}}");
    check("Times @@ Power @@@ factors", //
        "2010");

    check("FactorInteger(50!*8392894255239922239)", //
        "{{2,47},{3,23},{5,12},{7,9},{11,4},{13,3},{17,2},{19,2},{23,2},{29,1},{31,1},{37,\n"
            + "1},{41,1},{43,1},{47,1},{457,1},{11717,1},{84053,1},{887987,1}}");

    check("FactorInteger(8392894255239922239)", //
        "{{3,1},{7,1},{457,1},{11717,1},{84053,1},{887987,1}}");
    check("FactorInteger(4)", //
        "{{2,2}}");
    check("FactorInteger(3/8)", //
        "{{2,-3},{3,1}}");
    // sort is important for rational numbers
    check("FactorInteger(2345354/2424245)", //
        "{{2,1},{5,-1},{11,1},{17,1},{311,-1},{1559,-1},{6271,1}}");

    check("FactorInteger(-1)", //
        "{{-1,1}}");
    check("FactorInteger(-100)", //
        "{{-1,1},{2,2},{5,2}}");
    check("FactorInteger(-5!)", //
        "{{-1,1},{2,3},{3,1},{5,1}}");
    check("FactorInteger(-4)", //
        "{{-1,1},{2,2}}");
    check("FactorInteger(0)", //
        "{{0,1}}");
    check("FactorInteger(2941189)", //
        "{{1709,1},{1721,1}}");
    check("FactorInteger(12007001)", //
        "{{3001,1},{4001,1}}");
    check("FactorInteger(16843009)", //
        "{{257,1},{65537,1}}");
    check("FactorInteger(-5!)", //
        "{{-1,1},{2,3},{3,1},{5,1}}");
    check("Table(FactorInteger(2^2^n + 1), {n, 6})", //
        "{{{5,1}},{{17,1}},{{257,1}},{{65537,1}},{{641,1},{6700417,1}},{{274177,1},{\n"
            + "67280421310721,1}}}");
    check("FactorInteger(2010 / 2011)", //
        "{{2,1},{3,1},{5,1},{67,1},{2011,-1}}");

    check("FactorInteger(2941189)", //
        "{{1709,1},{1721,1}}");
    check("FactorInteger(12007001)", //
        "{{3001,1},{4001,1}}");
    check("FactorInteger(152769431)", //
        "{{12347,1},{12373,1}}");
    check("FactorInteger(1524212467931)", //
        "{{1234577,1},{1234603,1}}");
  }
}
